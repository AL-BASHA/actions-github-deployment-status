name: Test, lint and build

on: push

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Test
        uses: docker://bats/bats
        with:
          args: test/deployment-get-id.bats
      - name: Lint
        uses: docker://koalaman/shellcheck
        with:
          args: bin/deployment-create-status bin/deployment-get-id
      - name: Docker build
        run: docker build -t actions-github-deployment-status .

  gh-tagged-release:
    name: Tagged release
    needs: test
    runs-on: ubuntu-latest

    if: github.ref  == 'v[0-9]+.[0-9]+.[0-9]+'

    steps:
      - name: Checkout source code
        uses: actions/checkout@v2

      - name: Build Release # This would actually build your project, using zip for an example artifact
        run: |
          zip -r actions-github-deployment-status-${{ github.ref }} action.yml Dockerfile bin/

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: true
          prerelease: false
